global
  log /dev/log  local0
  log /dev/log  local1 notice
{% if haproxy_socket != '' %}
  stats socket {{ haproxy_socket }} level admin
{% endif %}
{% if haproxy_chroot != '' %}
  chroot {{ haproxy_chroot }}
{% endif %}
  user {{ haproxy_user }}
  group {{ haproxy_group }}
  daemon
{% for global_var in haproxy_global_vars %}
  {{ global_var }}
{% endfor %}

defaults
  log global
  mode  tcp 
  retries  3
  timeout http-request    10s
  timeout queue           1m
  timeout connect         10s
  timeout client          1m
  timeout server          1m
  timeout http-keep-alive 10s
  timeout check           5s

resolvers local_dns
    nameserver local_nameserver ${NAMESERVER_HOST}:53
    hold valid 1s

frontend http
    bind :::80 v4v6
    default_backend local_http

frontend https
    bind :::443 v4v6
    default_backend local_https

# Backend resolvers use the locally configured DNS resolver, and sets the
# health check to happen every second, so that we can do a DNS CNAME-based
# cutover at will.
#
# Without this setup, HAProxy will just resolve the hostname on startup
# See https://serverfault.com/questions/681000/force-haproxy-to-lookup-dns-for-backend-server
# 
backend local_http
    server app_http ${APP_HOST}:80 resolvers local_dns check inter 1000

backend local_https
    server app_https ${APP_HOST}:443 resolvers local_dns check inter 1000

